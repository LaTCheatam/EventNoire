[{"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/index.js":"1","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/App.js":"2","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/index.js":"3","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/csrf.js":"4","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/session.js":"5","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/components/LoginFormPage/index.js":"6","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/components/SignupFormPage/index.js":"7","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/components/Navigation/index.js":"8","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/components/Navigation/ProfileButton.js":"9","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/events.js":"10","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/eventIndex.js":"11","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/components/EventCreateFormPage/index.js":"12"},{"size":849,"mtime":1617118211252,"results":"13","hashOfConfig":"14"},{"size":1084,"mtime":1617301890992,"results":"15","hashOfConfig":"14"},{"size":817,"mtime":1617289102446,"results":"16","hashOfConfig":"14"},{"size":1276,"mtime":1617117424574,"results":"17","hashOfConfig":"14"},{"size":1819,"mtime":1617123737605,"results":"18","hashOfConfig":"14"},{"size":1931,"mtime":1617268076659,"results":"19","hashOfConfig":"14"},{"size":2477,"mtime":1617268467528,"results":"20","hashOfConfig":"14"},{"size":1147,"mtime":1617302031972,"results":"21","hashOfConfig":"14"},{"size":1193,"mtime":1617126224309,"results":"22","hashOfConfig":"14"},{"size":2733,"mtime":1617321726205,"results":"23","hashOfConfig":"14"},{"size":3684,"mtime":1617290990397,"results":"24","hashOfConfig":"14"},{"size":2423,"mtime":1617321592454,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1gxkh94",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/index.js",[],["54","55"],"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/App.js",[],"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/index.js",[],"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/csrf.js",[],"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/session.js",[],"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/components/LoginFormPage/index.js",[],"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/components/SignupFormPage/index.js",[],"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/components/Navigation/index.js",[],"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/components/Navigation/ProfileButton.js",[],"/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/events.js",["56","57"],"// frontend/src/store/event.js\nimport { csrfFetch } from './csrf'\nexport const LOAD_EVENTS = 'eventcreate/LOAD_EVENTS';\nexport const LOAD_EVENT = 'eventcreate/LOAD_EVENT'\nexport const REMOVE_EVENT = 'eventcreate/REMOVE_EVENT';\nexport const UPDATE_EVENT = 'eventcreate/UPDATE_EVENT';\nexport const ADD_EVENT = 'eventcreate/ADD_EVENT';\n    \nconst loadEvents = (events) => ({\n    type: LOAD_EVENTS,\n    events,\n});\n\nconst loadEvent = (event) => ({\n    type: LOAD_EVENT,\n    event,\n});\n\nconst removeEvent = (eventId) => ({\n    type: REMOVE_EVENT,\n    eventId,\n});\n\nconst addEvent = (event) => ({\n    type: ADD_EVENT,\n    event,\n});\n\nconst updateEvent = (event) => ({\n    type: UPDATE_EVENT,\n    event,\n});\n\nexport const fetchEvents = () => async (dispatch) => {\n  const response = await fetch(`/api/events`);\n\n  if (response.ok) {\n    const events = await response.json();\n    dispatch(loadEvents(events));\n  }\n};\n\nexport const fetchEvent = (id) => async (dispatch) => {\n  const response = await fetch(`/api/events/${id}`);\n\n  if (response.ok) {\n    const event = await response.json();\n    dispatch(loadEvent(event, id));\n  }\n};\n\nexport const createEvent = (data) => async dispatch => {\n  // console.log(data)\n  const response = await csrfFetch(`/api/events`, {\n    method: 'post',\n    body: JSON.stringify(data),\n  });\n\n  // if (response.ok) {\n  //   const event = await response.json();\n  //   console.log(event)\n  //   // dispatch(addEvent(event));\n  // }\n};\n\nexport const renewEvent = data => async dispatch => {\n  const response = await fetch(`/api/events/${data.id}`, {\n    method: 'put',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (response.ok) {\n    const event = await response.json();\n    dispatch(updateEvent(event));\n    return event;\n  }\n};\n\nexport const deleteEvent = eventId => async dispatch => {\n  const response = await fetch(`/api/events/${eventId}`, {\n    method: 'delete',\n  });\n\n  if (response.ok) {\n    const event = await response.json();\n    dispatch(removeEvent(event.id, event.eventsId));\n  }\n};\n\nconst initialState = {};\n\nconst eventsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_EVENTS: {\n      const newEvents = {};\n      action.events.forEach(event => {\n        newEvents[event.id] = event;\n      })\n      return {\n        ...state,\n        ...newEvents\n      }\n    }\n    case REMOVE_EVENT: {\n      const newState = { ...state };\n      delete newState[action.eventId];\n      return newState;\n    }\n    case ADD_EVENT:\n    case UPDATE_EVENT: {\n      return {\n        ...state,\n        [action.event.id]: action.event,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default eventsReducer;","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/eventIndex.js",["58"],"// frontend/src/store/eventIndex.js\n\nimport { LOAD_EVENTS, LOAD_EVENT, REMOVE_EVENT, ADD_EVENT } from './events';\n\nconst LOAD = 'eventIndex/LOAD';\nconst LOAD_TYPES = 'eventIndex/LOAD_TYPES';\nconst ADD_ONE = 'eventIndex/ADD_ONE';\n  \nconst load = list => ({\n    type: LOAD,\n    list,\n});\n\nconst loadTypes = types => ({\n    type: LOAD_TYPES,\n    types,\n});\n\nconst addOneEvent = event => ({\n    type: ADD_ONE,\n    event,\n});\n\nexport const createEvent = data => async dispatch => {\n  console.log(data);\n  const response = await fetch(`/api/events`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (response.ok) {\n    const event = await response.json();\n    dispatch(addOneEvent(event));\n    return event;\n  }\n};\n\nexport const updateEvent = data => async dispatch => {\n  const response = await fetch(`/api/events/${data.id}`, {\n    method: 'put',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (response.ok) {\n    const event = await response.json();\n    dispatch(addOneEvent(event));\n    return event;\n  }\n};\n\nexport const getOneEvent = id => async dispatch => {\n  const response = await fetch(`/api/events/${id}`);\n\n  if (response.ok) {\n    const event = await response.json();\n    dispatch(addOneEvent(event));\n  }\n};\n\nexport const getAllEvents = (data) => async dispatch => {\n  const response = await fetch(`/api/events/`);\n\n  if (response.ok) {\n    const list = await response.json();\n    dispatch(load(list));\n    return list;\n  }\n};\n\nexport const getEventTypes = () => async dispatch => {\n  const response = await fetch(`/api/events`);\n\n  if (response.ok) {\n    const types = await response.json();\n    dispatch(loadTypes(types));\n  }\n};\n\nconst initialState = {\n  list: [],\n  types: [],\n};\n\nconst sortList = (list) => {\n  return list.sort((eventA, eventB) => {\n    return eventA.no - eventB.no;\n  }).map((event) => event.id);\n};\n\nconst eventsIndexReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD: {\n      const allEvents = {};\n      action.list.forEach(event => {\n        allEvents[event.id] = event;\n      });\n      return {\n        ...allEvents,\n        ...state,\n        list: sortList(action.list),\n      };\n    }\n    case LOAD_TYPES: {\n      return {\n        ...state,\n        types: action.types,\n      };\n    }\n    case ADD_ONE: {\n      if (!state[action.event.id]) {\n        const newState = {\n          ...state,\n          [action.event.id]: action.event\n        };\n        const eventList = newState.list.map(id => newState[id]);\n        eventList.push(action.event);\n        newState.list = sortList(eventList);\n        return newState;\n      }\n      return {\n        ...state,\n        [action.event.id]: {\n          ...state[action.event.id],\n          ...action.event,\n        }\n      };\n    }\n    case LOAD_EVENTS: {\n      return {\n        ...state,\n        [action.eventId]: {\n          ...state[action.eventId],\n          events: action.events.map(event => event.id),\n        }\n      };\n    }\n    case REMOVE_EVENT: {\n      return {\n        ...state,\n        [action.eventId]: {\n          ...state[action.eventId],\n          events: state[action.eventId].filter(\n            (event) => event.id !== action.eventId\n          ),\n        },\n      };\n    }\n    case ADD_EVENT: {\n      console.log(action.event);\n      return {\n        ...state,\n        [action.event.eventId]: {\n          ...state[action.event.eventId],\n          events: [...state[action.event.eventId], action.event.id],\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default eventsIndexReducer;\n","/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/components/EventCreateFormPage/index.js",["59","60","61","62","63","64"],"import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { createEvent } from '../../store/events';\n// import eventDatePicker from './eventDatePicker'\n\nconst EventCreateForm = () => {\n    const sessionUser = useSelector(state => state.session.user)\n    const dispatch = useDispatch();\n    const history = useHistory();\n    // const [host, setHost] = useState('');\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('')\n    // const [type, setType] = useState(eventTypes[0]);\n    // const [imageUrl, setImageUrl] = useState('')\n    const [numTickets, setNumTickets] = useState(1);\n    const [startDate, setStartDate] = useState(null);\n    const [startTime, setStartTime] = useState('')\n    const [endTime, setEndTime] = useState('');\n    console.log({title})\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const payload = {\n            userId: sessionUser.id, \n            title,\n            content,\n            numTickets,\n            startDate,\n            startTime,\n            endTime,\n        };\n\n        const event = await dispatch(createEvent (payload));\n        if (event) {\n            history.push(`/`);\n        }\n    };\n\n   \n        // let currentDate = new Date().toLocaleDateString();\n        // currentDate = currentDate.slice(0, 16);\n    \n\n    return (\n        <div className='event-form-container'>\n            <h2>Create An Event</h2>\n            <form onSubmit={handleSubmit} className='event-form-inputs'>\n            <div className='event-form-contents'>\n                <input type='text' placeholder='Make it short, sweet and succinct' value={title} onChange={(event) => setTitle(event.target.value)} /> \n                \n                {/* </div><label id='start-event'>\n                Start\n                <input type='datetime-local' min={currentDate} placeholder='Select Start Date' value={this.state.start_date} onChange={this.update('start_date')} /> \n                </label>\n                <span className='form-input-error'>\n    {this.checkError('Start cannot be blank')}</span> */}\n               \n                \n            </div>  \n                <p>You're almost to the end. Nicely done!</p>\n                <button type='submit'>Save</button>\n            </form>\n        </div>\n    )\n\n}\nexport default EventCreateForm;",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":24,"column":7,"nodeType":"71","messageId":"72","endLine":24,"endColumn":15},{"ruleId":"69","severity":1,"message":"73","line":54,"column":9,"nodeType":"71","messageId":"72","endLine":54,"endColumn":17},{"ruleId":"69","severity":1,"message":"74","line":3,"column":23,"nodeType":"71","messageId":"72","endLine":3,"endColumn":33},{"ruleId":"69","severity":1,"message":"75","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":19},{"ruleId":"69","severity":1,"message":"76","line":13,"column":21,"nodeType":"71","messageId":"72","endLine":13,"endColumn":31},{"ruleId":"69","severity":1,"message":"77","line":16,"column":24,"nodeType":"71","messageId":"72","endLine":16,"endColumn":37},{"ruleId":"69","severity":1,"message":"78","line":17,"column":23,"nodeType":"71","messageId":"72","endLine":17,"endColumn":35},{"ruleId":"69","severity":1,"message":"79","line":18,"column":23,"nodeType":"71","messageId":"72","endLine":18,"endColumn":35},{"ruleId":"69","severity":1,"message":"80","line":19,"column":21,"nodeType":"71","messageId":"72","endLine":19,"endColumn":31},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'addEvent' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'LOAD_EVENT' is defined but never used.","'useEffect' is defined but never used.","'setContent' is assigned a value but never used.","'setNumTickets' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setStartTime' is assigned a value but never used.","'setEndTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]