{"ast":null,"code":"// frontend/src/store/sessions.js\nimport { csrfFetch } from './csrf';\nconst LOAD_USER = 'session/loadUser';\nconst DELETE_USER = 'sessions/deleteUser';\n\nconst loadUser = user => {\n  return {\n    type: LOAD_USER,\n    user\n  };\n};\n\nconst deleteUser = () => {\n  return {\n    type: DELETE_USER\n  };\n}; //Restore Session User\n\n\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch('/api/session');\n  const data = await response.json();\n  dispatch(loadUser(data.user));\n  return response;\n}; // session action\n\nexport const login = user => async dispatch => {\n  const {\n    credential,\n    password\n  } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(loadUser(data.user));\n  return response;\n};\nconst initialState = {\n  user: null\n}; // User session reducer\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n\n  switch (action.type) {\n    case LOAD_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.user;\n      return newState;\n\n    case DELETE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n\n    default:\n      return state;\n  }\n}; // Signup User Action\n\n\nexport const signup = user => async dispatch => {\n  const {\n    username,\n    email,\n    password\n  } = user;\n  const response = await csrfFetch(`/api/users`, {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(loadUser(data.user));\n  return response;\n}; // logout action\n\nexport const logout = () => async dispatch => {\n  const response = await csrfFetch('/api/session', {\n    method: 'DELETE'\n  });\n  dispatch(deleteUser());\n  return response;\n};\nexport default sessionReducer;","map":{"version":3,"sources":["/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/session.js"],"names":["csrfFetch","LOAD_USER","DELETE_USER","loadUser","user","type","deleteUser","restoreUser","dispatch","response","data","json","login","credential","password","method","body","JSON","stringify","initialState","sessionReducer","state","action","newState","Object","assign","signup","username","email","logout"],"mappings":"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","sourcesContent":["// frontend/src/store/sessions.js\n\nimport { csrfFetch } from './csrf';\n\nconst LOAD_USER = 'session/loadUser';\nconst DELETE_USER = 'sessions/deleteUser';\n\nconst loadUser = (user) => {\n    return {\n        type: LOAD_USER,\n        user,\n    };\n};\n\nconst deleteUser = () => {\n    return {\n        type: DELETE_USER,\n    };\n};\n\n//Restore Session User\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch('/api/session');\n  const data = await response.json();\n  dispatch(loadUser(data.user));\n  return response;\n};\n\n// session action\nexport const login = (user) => async (dispatch) => {\n  const { credential, password } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(loadUser(data.user));\n  return response;\n};\n\nconst initialState = { user: null };\n\n// User session reducer\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case LOAD_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.user;\n      return newState;\n    case DELETE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\n\n// Signup User Action\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password } = user\n  const response = await csrfFetch(`/api/users`, {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(loadUser(data.user));\n  return response;\n}\n\n// logout action\nexport const logout = () => async (dispatch) => {\n  const response = await csrfFetch('/api/session', {\n    method: 'DELETE',\n  });\n  dispatch(deleteUser());\n  return response;\n};\n\nexport default sessionReducer;"]},"metadata":{},"sourceType":"module"}