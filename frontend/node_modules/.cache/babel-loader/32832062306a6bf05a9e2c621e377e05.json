{"ast":null,"code":"// frontend/src/store/sessions.js\nimport { csrfFetch } from './csrf';\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'sessions/removeUser';\n\nconst setUser = user => {\n  return {\n    type: SET_USER,\n    user\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER\n  };\n}; // session action\n\n\nexport const login = user => async dispatch => {\n  const {\n    credential,\n    password\n  } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n}; //Restore Session User\n\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch('/api/session');\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nconst initialState = {\n  user: null\n}; // User session reducer\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.user;\n      return newState;\n\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n\n    default:\n      return state;\n  }\n}; // Signup User Action\n\n\nexport const signup = user => async dispatch => {\n  const {\n    username,\n    email,\n    password\n  } = user;\n  const response = await csrfFetch(`/api/users`, {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n}; // logout action\n\nexport const logout = () => async dispatch => {\n  const response = await csrfFetch('/api/session', {\n    method: 'DELETE'\n  });\n  dispatch(removeUser());\n  return response;\n};\nexport default sessionReducer;","map":{"version":3,"sources":["/Users/obsidyenc/Documents/appAcadNov/Module5/Wk 16/EventNoire/frontend/src/store/session.js"],"names":["csrfFetch","SET_USER","REMOVE_USER","setUser","user","type","removeUser","login","dispatch","credential","password","response","method","body","JSON","stringify","data","json","restoreUser","initialState","sessionReducer","state","action","newState","Object","assign","signup","username","email","logout"],"mappings":"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","sourcesContent":["// frontend/src/store/sessions.js\n\nimport { csrfFetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'sessions/removeUser';\n\nconst setUser = (user) => {\n    return {\n        type: SET_USER,\n        user,\n    };\n};\n\nconst removeUser = () => {\n    return {\n        type: REMOVE_USER,\n    };\n};\n\n\n\n// session action\nexport const login = (user) => async (dispatch) => {\n  const { credential, password } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\n//Restore Session User\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch('/api/session');\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nconst initialState = { user: null };\n\n// User session reducer\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.user;\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\n\n// Signup User Action\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password } = user\n  const response = await csrfFetch(`/api/users`, {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n}\n\n// logout action\nexport const logout = () => async (dispatch) => {\n  const response = await csrfFetch('/api/session', {\n    method: 'DELETE',\n  });\n  dispatch(removeUser());\n  return response;\n};\n\nexport default sessionReducer;"]},"metadata":{},"sourceType":"module"}